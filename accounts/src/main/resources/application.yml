server:
  port: 8113
spring:
  main:
    allow-bean-definition-overriding: true

  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:postgresql://localhost:5432/rewadb
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 7250
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

  config:
    import: "optional:configserver:http://localhost:8000/"

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
#      bindings:
#        updateCommunication-in-0:
#          destination: communication-sent
#          group: ${spring.application.name}
#        sendCommunication-out-0:
#          destination: send-communication
#      kafka:
#        binder:
#          brokers:
#            - localhost:9092
       bindings:
         updateCommunication-in-0:
           destination: communication-sent
           group: ${spring.application.name}
           consumer:
             concurrency: 3  # Number of consumer instances for parallel processing
             partitioned: true  # Enable partitioning
             maxAttempts: 5  # Retry up to 5 times before failing
             backOffInitialInterval: 1000  # Initial retry delay
             backOffMaxInterval: 10000  # Max retry delay
             enableDlq: true  # Dead letter queue for failed messages
             dlqName: communication-sent-dlq  # DLQ topic name
         sendCommunication-out-0:
           destination: send-communication
           producer:
             partitionCount: 5  # Number of partitions for scalability
             partitionKeyExpression: headers['accountId']  # Partition by account ID for consistency

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"

endpoints:
  shutdown:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    env:
      enabled: true

info:
  app:
    name:
      description: "RewaBank accounts Application"
      version: "1.0.0"
logging:
  level:
    com:
      RewaBank:
        accounts: DEBUG
  pattern:
    level: "%5p[${spring.application.name},%X{trace_ID},%X{span_id}]"
#resilency configuration
resilience4j.circuitBreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - java.util.concurrent.TimeoutException
      ignoreExceptions:
        - java.lang.NullPointerException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1